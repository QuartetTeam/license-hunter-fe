name: Create Jira issue
on:
  issues:
    types:
      - opened
jobs:
  create-issue:
    name: Create Jira issue
    runs-on: ubuntu-latest
    steps:
      - name: Login
        uses: atlassian/gajira-login@v3
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_TOKEN }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}

      - name: Checkout dev code
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Issue Parser
        uses: stefanbuck/github-issue-praser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/issue_template.yml

      - name: Log Issue Parser
        run: |
          echo '${{ steps.issue-parser.outputs.issueparser_parentKey }}'
          echo '${{ steps.issue-parser.outputs.__ticket_number }}'
          echo '${{ steps.issue-parser.outputs.jsonString }}'

      - name: Remove existing branch section to update UPDATED_BODY
        run: |
          UPDATED_BODY=$(echo "${{ github.event.issue.body }}" | sed '/### 🌳 브랜치명 (Branch)/,/^[^#]/d')

          echo "UPDATED_BODY (after removal): ${UPDATED_BODY}"

          echo "UPDATED_BODY<<EOF" >> $GITHUB_ENV
          echo "${UPDATED_BODY}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Convert markdown to Jira Syntax
        uses: peter-evans/jira2md@v1
        id: md2jira
        with:
          input-text: |
            ### Github Issue Link
            - ${{ github.event.issue.html_url }}

            ${{ env.UPDATED_BODY }}
          mode: md2jira

      - name: Create Issue
        id: create
        uses: atlassian/gajira-create@v3
        with:
          project: QUAR
          issuetype: Task
          summary: '${{ vars.ISSUE_PREFIX }} ${{ github.event.issue.title }}'
          description: '${{ steps.md2jira.outputs.output-text }}'
          fields: |
            {
              "parent": {
                "key": "${{ steps.issue-parser.outputs.issueparser_parentKey }}"
              }
            }

      - name: Log created issue
        run: echo "Jira Issue ${{ steps.issue-parser.outputs.parentKey }}/${{ steps.create.outputs.issue }} was created"

      - name: Set branch information
        id: branch-info
        run: |
          TEMP_BRANCH_NAME="${{ steps.issue-parser.outputs.issueparser_branch}}"
          echo "TEMP_BRANCH_NAME: ${TEMP_BRANCH_NAME}"

          PREFIX=$(echo "${TEMP_BRANCH_NAME}" | cut -d'/' -f1 | tr -d '[:space:]')
          SUFFIX=$(echo "${TEMP_BRANCH_NAME}" | cut -d'/' -f2 | tr -d '[:space:]')      

          echo "PREFIX: ${PREFIX}"
          echo "SUFFIX: ${SUFFIX}"

          echo "PREFIX=$PREFIX" >> $GITHUB_ENV
          echo "SUFFIX=$SUFFIX" >> $GITHUB_ENV

          ISSUE_NUMBER="${{ steps.create.outputs.issue }}"
          echo "ISSUE_NUMBER: ${ISSUE_NUMBER}"
          echo "ISSUE_NUMBER=$ISSUE_NUMBER" >> $GITHUB_ENV

      - name: Create branch from dev for feature
        if: ${{ env.PREFIX == 'feature' }}
        run: |
          BRANCH_NAME="${PREFIX}/${ISSUE_NUMBER}-${SUFFIX}"
          echo "BRANCH_NAME: ${BRANCH_NAME}"
          git checkout -b "${BRANCH_NAME}"
          git push origin "${BRANCH_NAME}"
          echo "'feature' 브랜치를 생성합니다."
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV

      - name: Checkout main code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Create branch from main for hotfix
        if: ${{ env.PREFIX == 'hotfix' }}
        run: |
          BRANCH_NAME="${PREFIX}/${ISSUE_NUMBER}-${SUFFIX}"
          echo "BRANCH_NAME: ${BRANCH_NAME}"
          git checkout -b "${BRANCH_NAME}"
          git push origin "${BRANCH_NAME}"
          echo "'hotfix' 브랜치를 생성합니다."
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV

      - name: Append new branch name to update UPDATED_BODY
        if: env.BRANCH_NAME != ''
        run: |
          UPDATED_BODY="${{ env.UPDATED_BODY }}

          ### 🌳 브랜치명 (Branch)

          ${{ env.BRANCH_NAME }}"

          echo "UPDATED_BODY (after append): ${UPDATED_BODY}"

          echo "UPDATED_BODY<<EOF" >> $GITHUB_ENV
          echo "${UPDATED_BODY}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Update issue title
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'update-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          title: '[${{ steps.create.outputs.issue }}] ${{ github.event.issue.title }}'

      - name: Update issue body
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'update-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            ${{ env.UPDATED_BODY }}

      - name: Add comment with Jira issue link
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'create-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: 'Jira Issue Created: [${{ steps.create.outputs.issue }}](${{ secrets.JIRA_BASE_URL }}/browse/${{ steps.create.outputs.issue }})'
